.test{background:#000}

/* Testing autoprefixer */.autoprefixer{display:flex}@keyframes a{0%{width:0}to{width:100%}}.animateThis{animation:a 2s;display:flex}

/* Testing cssnext */.cssnext{background:red;background:rgba(255,0,0,.9)}

/* Testing precss */.precss{background:green}.menu{width:100%}.menu a{text-decoration:none}.menu:before{content:''}body{color:#232323}
/*$column_layout: 2;
.column {
  @if $column_layout==2 {
    width: 50%;
    float: left;
  }
  @else {
    width: 100%;
  }
}*/p:nth-of-type(1){margin-left:100%}p:nth-of-type(2){margin-left:50%}p:nth-of-type(3){margin-left:33.33333%}.icon-twitter{background:url(img/twitter.png)}.icon-facebook{background:url(img/facebook.png)}.icon-youtube{background:url(img/youtube.png)}.button.twitter{background-image:url(img/twitter.png);background-color:blue}.button.youtube{background-image:url(img/youtube.png);background-color:red}.button.twitter{background-image:url(img/twitter.png);background-color:blue;width:48px;width:3rem}.button.youtube{background-image:url(img/youtube.png);background-color:red;width:64px;width:4rem}.blue_button,.red_button{border-radius:.5rem;padding:1em;border-width:1px;border-width:.0625rem;border-style:solid}.blue_button{border-color:#2f74d1;background-color:#3b8eff}.red_button{border-color:#c41a1e;background-color:#ff2025}


/* Testing grid */


/* Columns are created by using the grid-column declaration and passing a /-delimited value. This value contains the number of columns the element should span, separated by the total number of columns in the element's container. */.element{float:left;width:6.42361%;margin-right:2.08333%}

/* You can also use it in conjunction with the !last declaration to make sure that the last element of the row doesn't allocate a gutter, pushing itself to the next row. */.element2{float:left;width:43.02326%}

/* Elements can be offset to the left and the right by using grid-pull and grid-push. */.push{margin-left:8.50694%}.pull{margin-right:8.50694%}

/* The width and gutter values can be retrieved by calling grid-width(...) and grid-gutter(...) from a declaration. */.element3{width:6.42361%;margin-left:2.08333%}

/* Add Fallback for “will-change” Property */.thisWillChange{backface-visibility:hidden;will-change:transform}

/* Create rgba() Color Fallbacks */.rgbaFallback{background:#000;background:rgba(0,0,0,.5)}

/* Create opacity Fallbacks */.opacityFallback{opacity:.5;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)"}

/* Convert :: into : on Pseudo-elements */.pseudo-element:before{content:''}

/* Add vm Fallback for vmin */.vmFallback{width:50vm;width:50vmin}

/* Add px Fallback for rem Units */.remFallback{height:160px;height:10rem;font:32px Arial;font:2rem Arial}.remFallback:before{content:'';line-height:16px;line-height:1rem}.css_nano,.css_nano+p,[class*=css_nano]{
    /* cssnano will remove this comment */display:flex;margin-top:16px;margin-bottom:32px;margin-left:24px;margin:1rem 2.5rem 2rem 1.5rem;margin-right:40px;font-weight:400;padding:28px;padding:1.75rem;width:46.5rem}