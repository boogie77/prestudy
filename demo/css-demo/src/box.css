/*
@styleguide

# WaterBolik's Css Style Guide

# Box盒模型

html文档中的每个元素都被描绘成矩形盒子，这些矩形盒子通过一个模型来描述其占用空间，这个模型称为盒模型。盒模型通过四个边界来描述：margin（外边距），border（边框），padding（内边距），content（内容区域），如图所示：

<a class="fancybox" title="CSS盒模型" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model.jpg" rel="group">
 <img title="CSS盒模型" src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model.jpg" alt="CSS盒模型" />
</a>

## CSS盒模型几点提示

1.	padding，border，margin都是可选的，默认值为0，但是浏览器会自行设置元素的margin和padding，通过在css样式表中设置\*\{ margin:0; padding:0\}来覆盖浏览器样式。注意：这里的*表示所有元素，但是这样性能不好，建议一次列出常用的元素来设置
2.	如果给元素设置背景，并且边框的颜色为透明，背景将应用于内容，内边距和边框组成的区域。
3.	浏览器兼容性
	一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。 根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。 不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。

## 水平格式化

### 非替换元素的水平格式化

水平格式化的7大属性是：margin-left，border-left，padding-left，width，padding-right，border-right，margin-right。这7个属性值加起来往往是父级元素的width值。 >其中margin-left，width，margin-right可以设置为auto。

** 主要有下面几种情况： **

*/

.parent {
  width: 600px;
  background: #eeb3b3 none repeat scroll 0 0;
}

/*
@styleguide

## 1. 一个属性设置成auto

如果三个属性中某个属性设置了auto，其余两个为特定的值，那么设置auto的属性为确定所需的元素，从而使得元素框的宽度等于父级元素的width。

<div class="parent">
  <span class="block1">块级元素</span>
</div>

    <div class="parent">
      <span class="block1">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo1.1.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo1.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo1.2.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo1.2.jpg" alt="" />
</a>

被设置为auto的margin-auto属性值为340px，即
>margin-left + border-left + padding-left + width + padding-right + border-right + margin-right =
>
>340 + 0 + 30 + 100 + 30 + 0 + 100 = 600
*/

.parent .block1 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin-left: auto;
  margin-right: 100px;
  border: 0;
  padding: 30px;
  width: 100px;
}

/*
@styleguide

## 2. 总和不等于父级元素的width

使用auto可以弥补实际值与所需总和的差距，如果三个属性都设置了特定值，但是总和不等于父级元素的width。

<div class="parent">
  <span class="block2">块级元素</span>
</div>

    <div class="parent">
      <span class="block2">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo2.1.jpg" rel="group">
 <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo2.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo2.2.jpg" rel="group">
 <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo2.2.jpg" alt="" />
</a>

在上面的CSS中，margin-left，width，margin-right都设置了特定值，但是七大属性总和不等于父级元素的width。这种情况下：
>在FireFox中，margin-right的值为开发者设定的值
>
>在Chrome中，margin-right被强制为auto

*/

.parent .block2 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin-left: 100px;
  margin-right: 100px;
  border: 0;
  padding: 30px;
  width: 100px;
}

/*
@styleguide

## 3. width设置为auto

如果margin-left和margin-right都设置特定值，width设置为auto，则width将会等于某个特定值以达到父级元素的width。
如果将width修改为auto，即：

<div class="parent">
  <span class="block3">块级元素</span>
</div>

    <div class="parent">
      <span class="block3">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo3.1.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo3.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo3.2.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo3.2.jpg" alt="" />
</a>

元素的width将被被设定为340px来使总和达到父级元素的width
*/

.parent .block3 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin-left: 100px;
  margin-right: 100px;
  border: 0;
  padding: 30px;
  width: auto;
}

/*
@styleguide

## 4. margin-left和margin-right设置成auto

如果margin-left和amrgin-right都设置为auto，则它们会设置相等的值，因此元素将在父级元素中居中。这是将块级元素居中的一种方法。
注意：text-align设置为center只适用于块级元素中的内联内容居中，并不能使块级元素居中。
设置margin属性为margin:0 auto, 即：

<div class="parent">
  <span class="block4">块级元素</span>
</div>

    <div class="parent">
      <span class="block4">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo4.1.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo4.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo4.2.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo4.2.jpg" alt="" />
</a>

margin-left和margin-right的值会被设置为相等，使得元素居中
*/

.parent .block4 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin: 0 auto;
  border: 0;
  padding: 30px;
  width: 100px;
}

/*
@styleguide

## 5. 某个外边距和width设置成auto

如果设置某个外边距和width为auto，则设置为auto的外边距会为0，width会设置为所需的值来填充父级元素。

<div class="parent">
  <span class="block5">块级元素</span>
</div>

    <div class="parent">
      <span class="block5">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo5.1.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo5.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo5.2.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo5.2.jpg" alt="" />
</a>

设置margin-left和width为auto，则margin-left将被设置为0，width会被设置为440px来满足父级元素的width
*/

.parent .block5 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin-left: auto;
  margin-right: 100px;
  border: 0;
  padding: 30px;
  width: auto;
}

/*
@styleguide

## 6. 全设置成auto

如果margin和width都设置为auto，则两个外边距会设置为0，width会尽可能宽。

<div class="parent">
  <span class="block6">块级元素</span>
</div>

    <div class="parent">
      <span class="block6">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo6.1.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo6.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo6.2.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo6.2.jpg" alt="" />
</a>

三个值都设置为auto，则两个外边距会设置为0，width会被设置为540px
*/

.parent .block6 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
  border: 0;
  padding: 30px;
  width: auto;
}

/*
@styleguide

## 7. 负外边距

7个属性只要都是大于等于0的值，总和总是等于父级元素的width，不会超过父级元素的区域
但是可以通过制定负外边距来得到比父级元素width更大的区域

<div class="parent">
  <span class="block7">块级元素</span>
</div>

    <div class="parent">
      <span class="block7">块级元素</span>
    </div>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo7.1.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo7.1.jpg" alt="" />
</a>

<a class="fancybox" href="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo7.2.jpg" rel="group">
  <img src="http://7xnjy3.com1.z0.glb.clouddn.com/box-model-demo7.2.jpg" alt="" />
</a>

设置margin-right为-400px，则元素会大于父级元素width，因为100+0+30+840+30+0-400=600，元素的width为840px
*/

.parent .block7 {
  background: #ffd800 none repeat scroll 0 0;
  display: block;
  margin-left: 100px;
  margin-right: -400px;
  border: 0;
  padding: 30px;
  width: auto;
}
