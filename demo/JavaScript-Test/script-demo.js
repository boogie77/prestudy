// <script>标签
// 【1】6个属性
// （1）async:可选，表示应该立即下载脚本，但不妨碍页面的其他操作。只对外部脚本有效
// （2）charset:可选，表示通过src属性指定的代码的字符集，大多数浏览器会忽略
// （3）defer:可选，表示脚本可以延迟到文档完全被解析和显示之后再执行，只对外部脚本有效
// （4）language:已废弃
// （5）src:表示包含要执行代码的外部文件。
//         这个文件既可以是与包含它的页面位于同一个服务器上的文件，也可以是其他任何域中的文件。
// （6）type:可选，是language的替代属性，表示编写代码使用的脚本语言的内容类型，也称为MIME类型。
//          考虑到兼容，一般还是text/javascript，若不指定，默认值也是text/javascript
// 【2】两种使用<script>标签的方式：引入外部文件和在页面内嵌入js代码
// 注意：带有src属性的<script>元素不应该在其<script>标签之间再包含额外的js代码，
//      如果包含了嵌入的代码，则只会下载并执行外部脚本，而忽略嵌入的代码
// 【3】
// 注意1：浏览器在遇到<body>标签时才开始呈现内容。
//       因此，把<script>引用放在<body>元素中页面内容的后面是最佳选择。
// 注意2：最好只包含一个延迟脚本。同时把延迟脚本也放在页面底部。
// 注意3：异步脚本在加载期间不要修改DOM
// 【4】使用<noscript>标签可以指定在不支持脚本的浏览器中显示的替代内容，
//     但在启用了脚本的情况下，浏览器不会显示<noscript>的任何内容。
