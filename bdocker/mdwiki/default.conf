# This is a default site configuration which will simply return 404, preventing
# chance access to any other virtualhost.

# HTTP服务器
server {
    # 监听80端口，用于HTTP协议
	listen 80 default_server;
	listen [::]:80 default_server;

    # 定义使用www.xx.com访问
    # server_name  www.helloworld.com;

    # 对所有请求进行负载均衡请求
    # location / {
    #    root        /root;                              # 定义服务器的默认网站根目录位置
    #    index       index.html index.htm;               # 定义首页索引文件的名称
    #    proxy_pass  http://load_balance_server;         # 请求转向load_balance_server 定义的服务器列表
    #
    #    # 以下是一些反向代理的配置(可选择性配置)
    #    # proxy_redirect off;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #   
    #    proxy_set_header X-Forwarded-For $remote_addr;  # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
    #    proxy_connect_timeout 90;                       # nginx跟后端服务器连接超时时间(代理连接超时)
    #    proxy_send_timeout 90;                          # 后端服务器数据回传时间(代理发送超时)
    #    proxy_read_timeout 90;                          # 连接成功后，后端服务器响应时间(代理接收超时)
    #    proxy_buffer_size 4k;                           # 设置代理服务器（nginx）保存用户头信息的缓冲区大小
    #    proxy_buffers 4 32k;                            # proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
    #    proxy_busy_buffers_size 64k;                    # 高负荷下缓冲大小（proxy_buffers*2）
    #    proxy_temp_file_write_size 64k;                 # 设定缓存文件夹大小，大于这个值，将从upstream服务器传
    #     
    #    client_max_body_size 10m;                       # 允许客户端请求的最大单文件字节数
    #    client_body_buffer_size 128k;                   # 缓冲区代理缓冲用户端请求的最大字节数
    # }
    
    # 首页
    # index /wiki/index.html

    # 指向webapp的目录
    root /wiki;

    # 编码格式
    charset utf-8;
   
	# Everything is a 404
	# location / {
	#	return 404;
	# }

    # 静态文件，nginx自己处理
    location ~ ^/(images|javascript|js|css|flash|media|static)/ {
        root /wiki;
        # 过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
        expires 30d;
    }

    # 设定查看Nginx状态的地址
    location /NginxStatus {
        stub_status           on;
        access_log            on;
        auth_basic            "NginxStatus";
        auth_basic_user_file  conf/htpasswd;
    }

    # 禁止访问 .htxxx 文件
    # location ~ /\.ht {
    #    deny all;
    # }

    # 错误处理页面（可选择性配置）
    error_page 404 /404.html;
	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}    

    # error_page 500 502 503 504  /50x.html;
    # location = /50x.html {
    #    root    html;
    # }
}
