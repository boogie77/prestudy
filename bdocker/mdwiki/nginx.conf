# /etc/nginx/nginx.conf

# 运行用户
user root;

# 启动进程数，通常设置成和cpu的数量相等
# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;
# worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# 全局错误日志
# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# 动态模块
# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# 工作模式及连接数上限
events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

# 设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
	# 设定mime类型(邮件支持类型)，类型由mime.types文件定义
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 1m;

	# 连接超时时间
	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 65;

	# sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    # 必须设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime。
	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;


	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	# ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:2m;

	# gzip压缩开关
	# Enable gzipping of responses.
	# gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	# gzip_static on;

	# 设定实际的服务器列表 
    # upstream zp_server1{
    #    server 127.0.0.1:8089;
    # }
	# 设定负载均衡的服务器列表
    # upstream load_balance_server {
    #     # weigth参数表示权值，权值越高被分配到的几率越大
    #     server 192.168.1.11:80   weight=5;
    #     server 192.168.1.12:80   weight=1;
    #     server 192.168.1.13:80   weight=6;
    # }

	# 设定日志
	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;


	# Includes virtual hosts configs.
	include /etc/nginx/conf.d/*.conf;
	
}